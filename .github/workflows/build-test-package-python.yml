name: test, package

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      # max-parallel: 6
      matrix:
        os: [ubuntu-latest]
        python-version: ['3.7', '3.8', '3.9', '3.10', '3.11']

    steps:
    - name: Check out repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade --user pip
        pip install setuptools tox
        pip install -e .[testing]
        python --version
        pip --version
        pip list

    - name: Run tests
      run: |
        tox --sitepackages
        python -c 'import itk_cucim'
        coverage run --source itk_cucim -m pytest itk_cucim -o junit_family=xunit2 -v --doctest-modules --junitxml=junit/test-results-${{ runner.os }}-${{ matrix.python-version }}.xml

    - name: Upload pytest test results
      uses: actions/upload-artifact@master
      with:
        name: pytest-results-${{ runner.os }}-${{ matrix.python-version }}
        path: junit/test-results-${{ runner.os }}-${{ matrix.python-version }}.xml
      # Use always() to always run this step to publish test results when there are test failures
      if: always()

    - name: Statistics
      if: success()
      run: |
         coverage report

    - name: Package Setup
    # - name: Run tests with tox
      run: |
        pip install build
        # check-manifest
        python -m build
        # twine check dist/
        # tox --sitepackages
        # python -m tox
